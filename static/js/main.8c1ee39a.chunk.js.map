{"version":3,"sources":["pages/HomePage.js","pages/UserPage.js","components/SnakeGrid.js","utils/helper.js","components/SnakeCard.js","components/ErrorDiv.js","pages/SnakeHome.js","index.js","App.js"],"names":["HomePage","className","to","UserPage","props","useState","name","loading","user","setUser","useEffect","a","axios","match","params","id","catch","error","data","errormsg","getUser","location","public_repos","href","blog","html_url","login","followers","SnakeGrid","height","positions","squareSize","foodPosition","fieldStyle","width","elementStyle","x","y","position","left","top","food","style","map","elem","key","mod","n","m","getRandomPos","stepSize","windowSize","range","Math","floor","random","getOppositeDirectionValue","currentDirection","oppositeDirectionIndex","initialState","val","directions","maxLength","getInitialState","JSON","parse","stringify","SnakeCard","relocate","oldpos","state","oldLastPositionX","length","oldLastPositionY","step","limit","forEach","pos","last","oldLastPositionDirection","newDirections","dir","push","headPos","currentFoodPosition","oldMaxLength","toString","positionsCountMap","reduce","acc","iposArr","Object","values","some","posCount","setState","setVal","k","updatePoint","updateHeadDirection","oldDir","handleKeyPress","event","preventDefault","dirToIndex","currentHeadDirection","changeDirectionOnClick","direction","disableScrollForSwipeInGridMobileView","document","addEventListener","this","setInterval","Container","Row","Col","xs","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","onSwipeMove","allowMouseEvents","onClick","class","viewBox","fill","xmlns","fill-rule","d","clip-rule","React","Component","ErrorDiv","message","bgcolor","color","md","autoString","App","Jumbotron","fluid","Tabs","defaultActiveKey","Tab","eventKey","title","theme","label","disabled","render","basename","process","exact","from","path","component","SnakeHome","querySelector"],"mappings":"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","file":"static/js/main.8c1ee39a.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function HomePage() {\n  return (\n    <div className=\"container\">\n      <h1>Home Page</h1>\n      <p>\n        <Link to=\"/user/taniarascia\">taniarascia</Link> on GitHub.\n      </p>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// this is the react hook way for writing react components // refer snake card to see the react class way of writing component\nexport default function UserPage(props) {\n  const initialUserState = {\n    name: 'chcha!',\n    loading: true,\n  }\n\n  const [user, setUser] = useState(initialUserState)\n\n  useEffect(() => {\n    const getUser = async () => {\n      const { data } = \n        await axios(`https://api.github.com/users/${props.match.params.id}`)\n        .catch((error) => {\n          return { \n            data : {\n              errormsg : 'jinh Chcha ko aap khoj rahe the, nahi mile!  :/    mumbai mein baaad ayi thi, bas, beh gye',\n              loading: false\n              }\n            }\n        });\n      \n      setUser(data) // this will overide the user state object // like its not setting the loading field, will be undefined......this aint like this.setState(it merges)\n    }\n\n    getUser()\n  }, [props.match.params.id])\n\n  return user.loading ? (\n  <div>Loading...<p>{user.name}</p></div>\n  ) : (\n    <div className=\"container\">\n      <h1>{props.match.params.id}</h1>\n      <h1>{user.errormsg}</h1>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Location</th>\n            <th>Public_Repos</th>\n            <th>Website</th>\n            <th>Profile_Link</th>\n            <th>Followers</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{user.name}</td>\n            <td>{user.location}</td>\n            <td>{user.public_repos}</td>\n            <td>\n              <a href={user.blog}>{user.blog}</a>\n            </td>\n            <td>\n              <a href={user.html_url}>{user.login}</a>\n            </td>\n            <td>{user.followers}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React from 'react';\n\nconst SnakeGrid = (props) => {\n    const { height = 400, positions = [[100, 200]], squareSize = 10, foodPosition = [130, 130] } = props;\n\n    const fieldStyle = {\n        width: height,\n        height: height\n    };\n\n    const elementStyle = (x, y) => {\n        const ans = {\n            position: 'absolute',\n            left: x,\n            top: y,\n            width: squareSize,\n            height: squareSize\n        }\n        return ans;\n    }\n\n    let food = null;\n    if (foodPosition != null) {\n        food = <div\n            style={elementStyle(foodPosition[0], foodPosition[1])}\n            className=\"bg-danger\"\n        />\n    }\n\n    return <div\n        style={fieldStyle}\n        className=\"bg-secondary\"\n    >\n        {\n            positions.map((elem, id) => {\n                return <div\n                    style={elementStyle(elem[0], elem[1])}\n                    className=\"bg-warning\"\n                    key={id}\n                />\n            })\n        }\n        {food}\n    </div>\n}\n\n\nexport default SnakeGrid\n","\nexport const mod = (n, m) => {\n    return ((n % m) + m) % m;\n}\n\n\n\nexport const getRandomPos = (stepSize, windowSize) => {\n    const range = Math.floor(windowSize / stepSize);\n\n    return [\n        (Math.floor((Math.random() * range))) * stepSize,\n        (Math.floor((Math.random() * range))) * stepSize\n    ]\n}\n\nexport const getOppositeDirectionValue = (currentDirection) => {\n    let oppositeDirectionIndex = (currentDirection + 2) % 4;\n    if (oppositeDirectionIndex === 0) {\n        oppositeDirectionIndex = 4;\n    }\n    return oppositeDirectionIndex;\n}","\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SnakeGrid from './SnakeGrid';\nimport { mod, getRandomPos, getOppositeDirectionValue } from '../utils/helper';\nimport Swipe from 'react-easy-swipe';\n\nconst initialState = {\n    val: 'Press up / down / left / right to move',\n    windowSize: 400,\n    squareSize: 10,\n    positions: [[100, 200], [90, 200], [80, 200], [70, 200], [60, 200], [50, 200]],\n    directions: [1, 1, 1, 1, 1, 1, 1],\n    maxLength: 6,\n    foodPosition: getRandomPos(10, 400)\n};\n\nconst getInitialState = () => {\n    return JSON.parse(JSON.stringify(initialState));\n}\n\nclass SnakeCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const { windowSize = 400 } = props;\n        this.state = { ...getInitialState(), windowSize };\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n        setInterval(() => this.relocate(), 100);\n    }\n\n    relocate = () => {\n\n        // when updating single point based on its direction\n        // this.state.positions.forEach((pos, id) => {\n        //     this.updatePoint(this.state.directions[id], id);\n        // });\n\n        // for updating all points\n        // move points\n        const oldpos = [...this.state.positions];\n        const oldLastPositionX = this.state.positions[this.state.positions.length - 1][0];\n        const oldLastPositionY = this.state.positions[this.state.positions.length - 1][1];\n        const step = this.state.squareSize;\n        const limit = this.state.windowSize;\n        this.state.positions.forEach((pos, id) => {\n            //console.log(pos + ' ' + id);\n            switch (this.state.directions[id]) {\n                case 1:\n                    oldpos[id][0] = mod(oldpos[id][0] + step, limit);\n                    break;\n                case 2:\n                    oldpos[id][1] = mod(oldpos[id][1] + step, limit);\n                    break;\n                case 3:\n                    oldpos[id][0] = mod(oldpos[id][0] - step, limit);\n                    break;\n                case 4:\n                    oldpos[id][1] = mod(oldpos[id][1] - step, limit);\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        // shift direction to right by one step // keeping the first element as it is \n        // assumes this is a blocking thread and while this operation executes, all update head queries wait\n        let last = this.state.directions[0];\n        const oldLastPositionDirection = this.state.directions[this.state.directions.length - 1];\n        const newDirections = [last];\n        this.state.directions.forEach((dir, id) => {\n            if (id > 0) {\n                newDirections.push(last);\n                last = dir;\n            }\n        });\n\n        // if food found on head // relocate food // increase length at end // update max length\n        const headPos = oldpos[0];\n        let currentFoodPosition = this.state.foodPosition;\n        let oldMaxLength = this.state.maxLength;\n\n        if (headPos.toString() === currentFoodPosition.toString()) {\n            // update new food position\n            currentFoodPosition = getRandomPos(this.state.squareSize, this.state.windowSize);\n            // add new pos\n            oldpos.push([oldLastPositionX, oldLastPositionY]);\n            // add new direction\n            newDirections.push(oldLastPositionDirection);\n        }\n\n\n        // if repeats found in current position // snake tried ate itself\n        const positionsCountMap =\n            oldpos\n                .reduce((acc, iposArr) => ({\n                    ...acc,\n                    [iposArr]: (acc[iposArr] || 0) + 1\n                }), {});\n        const duplicateFound = Object.values(positionsCountMap).some(posCount => posCount > 1);\n\n        if (duplicateFound) {\n            this.setState({\n                ...getInitialState(),\n                maxLength: oldMaxLength\n            });\n        } else {\n            this.setState({\n                ...this.state,\n                positions: [...oldpos],\n                directions: [...newDirections],\n                foodPosition: currentFoodPosition,\n                maxLength: oldpos.length > oldMaxLength ? oldpos.length : oldMaxLength\n            });\n        }\n    }\n\n    setVal = (k) => {\n        this.setState({\n            val: k\n        });\n    }\n\n    updatePoint = (dir, id) => {\n        const oldpos = [...this.state.positions];\n        const step = this.state.squareSize;\n        const limit = this.state.windowSize;\n\n        switch (dir) {\n            case 1:\n                oldpos[id][0] = mod(oldpos[id][0] + step, limit);\n                break;\n            case 2:\n                oldpos[id][1] = mod(oldpos[id][1] + step, limit);\n                break;\n            case 3:\n                oldpos[id][0] = mod(oldpos[id][0] - step, limit);\n                break;\n            case 4:\n                oldpos[id][1] = mod(oldpos[id][1] - step, limit);\n                break;\n            default:\n                break;\n        }\n\n        this.setState({\n            ...this.state,\n            positions: [...oldpos]\n        });\n    }\n\n    updateHeadDirection = (dir) => {\n        const oldDir = [...this.state.directions];\n\n        oldDir[0] = dir;\n        this.setState({\n            ...this.state,\n            directions: [...oldDir]\n        });\n    }\n\n    handleKeyPress = (event) => {\n        event.preventDefault();\n\n        const dirToIndex = {\n            'ArrowUp': 4,\n            'ArrowDown': 2,\n            'ArrowLeft': 3,\n            'ArrowRight': 1\n        };\n\n        // snake cant move back\n        const currentHeadDirection = this.state.directions[0];\n        let oppositeDirectionIndex = getOppositeDirectionValue(currentHeadDirection);\n\n        if (dirToIndex[event.key] === oppositeDirectionIndex) {\n            return;\n        }\n\n        // update head direction\n        switch (event.key) {\n            case 'ArrowUp':\n                this.setVal('up');\n                this.updateHeadDirection(dirToIndex[event.key]);\n                break;\n            case 'ArrowDown':\n                this.setVal('down');\n                this.updateHeadDirection(dirToIndex[event.key]);\n                break;\n            case 'ArrowLeft':\n                this.setVal('left');\n                this.updateHeadDirection(dirToIndex[event.key]);\n                break;\n            case 'ArrowRight':\n                this.setVal('right');\n                this.updateHeadDirection(dirToIndex[event.key]);\n                break;\n            default:\n                this.setVal('Press up / down / left / right to move');\n                break;\n        }\n    }\n\n    changeDirectionOnClick = (direction) => {\n        const event = {\n            key: direction,\n            preventDefault: () => { }\n        }\n        this.handleKeyPress(event);\n    }\n\n    disableScrollForSwipeInGridMobileView = (pos, event) => {\n        return true;\n    }\n\n    render() {\n        return (<Container className=\"mt-5\">\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"auto\">\n                    <p>\n                        This is just another snake game, move snake, eat to grow, dont bite yourself!\n                </p>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"auto pl-0\">\n                    {/* <h1>Here will be the snake game block</h1> */}\n                    <Swipe \n                        onSwipeLeft={() => this.changeDirectionOnClick('ArrowLeft')}\n                        onSwipeRight={() => this.changeDirectionOnClick('ArrowRight')}\n                        onSwipeUp={() => this.changeDirectionOnClick('ArrowUp')}\n                        onSwipeDown={() => this.changeDirectionOnClick('ArrowDown')}\n                        onSwipeMove={(pos, event) => this.disableScrollForSwipeInGridMobileView(pos, event)}\n                        allowMouseEvents={true}\n                    >\n                        <SnakeGrid\n                            height={this.state.windowSize}\n                            squareSize={this.state.squareSize}\n                            positions={this.state.positions}\n                            foodPosition={this.state.foodPosition}\n                        />\n                    </Swipe>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"auto\">\n                    {this.state.val}\n                </Col>\n                <Col xs=\"auto\">\n                    {this.state.windowSize}\n                </Col>\n            </Row>\n            <Row className=\"mt-5 justify-content-md-center\">\n                <Col xs=\"auto\">\n                    Current Length : {this.state.positions.length}\n                </Col>\n                <Col xs=\"auto\">\n                    Max Length : {this.state.maxLength}\n                </Col>\n            </Row>\n            <Row className=\"mt-5 justify-content-md-center\">\n                <Col xs=\"auto\" onClick={() => this.changeDirectionOnClick('ArrowLeft')} >\n                    <svg class=\"bi bi-chevron-left\" width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M13.354 3.646a.5.5 0 010 .708L7.707 10l5.647 5.646a.5.5 0 01-.708.708l-6-6a.5.5 0 010-.708l6-6a.5.5 0 01.708 0z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </Col>\n                <Col xs=\"auto\" onClick={() => this.changeDirectionOnClick('ArrowRight')} >\n                    <svg class=\"bi bi-chevron-left\" width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M6.646 3.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L12.293 10 6.646 4.354a.5.5 0 010-.708z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </Col>\n                <Col xs=\"auto\" onClick={() => this.changeDirectionOnClick('ArrowUp')} >\n                    <svg class=\"bi bi-chevron-up\" width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M9.646 6.646a.5.5 0 01.708 0l6 6a.5.5 0 01-.708.708L10 7.707l-5.646 5.647a.5.5 0 01-.708-.708l6-6z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </Col>\n                <Col xs=\"auto\" onClick={() => this.changeDirectionOnClick('ArrowDown')} >\n                    <svg class=\"bi bi-chevron-down\" width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M3.646 6.646a.5.5 0 01.708 0L10 12.293l5.646-5.647a.5.5 0 01.708.708l-6 6a.5.5 0 01-.708 0l-6-6a.5.5 0 010-.708z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </Col>\n            </Row>\n        </Container>\n        );\n    }\n\n}\n\n\nexport default SnakeCard;","\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\nconst ErrorDiv = (props) => {\n    const { message, color } = props;\n    const bgcolor = color === 'red' ? 'bg-danger' : 'bg-warning';\n    const autoString = 'auto';\n    return <Container className=\"mt-5\" >\n        <Row className=\"justify-content-md-center \">\n            <Col md={autoString + ' ' + bgcolor}>\n                <h2>\n                    This section is under development!\n                </h2>\n            </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n            <Col md={autoString + ' ' + bgcolor}>\n                <p>\n                    {message}\n                </p>\n            </Col>\n        </Row>\n    </Container>\n}\n\n\nexport default ErrorDiv","import React from 'react'\n// import ThemedButton from '../components/ThemedButton'\nimport { Container, Row, Col, Jumbotron, Tabs, Tab } from 'react-bootstrap';\nimport SnakeCard from '../components/SnakeCard';\nimport ErrorDiv from '../components/ErrorDiv';\n\n\nexport default function App() {\n    return (\n        <Container className='mt-5'>\n            <Row>\n                <Col xs={12} >\n                    <Jumbotron fluid >\n                        <Container>\n                            <Row className=\"justify-content-md-center\">\n                                <Col md=\"auto\">\n                                    <h1>Just Another Snake Game</h1>\n                                </Col>\n                            </Row>\n                            <Row className=\"justify-content-md-center\">\n                                <Col md=\"auto\">\n                                    <p>\n                                        This is a simple hero unit, information banner about the snake game\n                                    </p>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Jumbotron>\n                </Col>\n            </Row>\n            {/* <Row className=\"justify-content-md-center\">\n                <h1>Hieee lesspa=lay</h1>\n                <ThemedButton theme=\"danger\" label=\"Delete Item\"></ThemedButton>\n            </Row> */}\n            <Row className=\"justify-content-center\">\n                <Col>\n                    <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"justify-content-center\">\n                        <Tab eventKey=\"home\" title=\"Home\">\n                            <SnakeCard theme=\"danger\" label=\"Delete Item\" />\n                        </Tab>\n                        <Tab eventKey=\"stats\" title=\"Stats\">\n                            <ErrorDiv message=\"Work is under progress to show your gameplay statistics.\" />\n                        </Tab>\n                        <Tab eventKey=\"other\" title=\"Other Info\" disabled>\n                            <ErrorDiv message=\"Section not available yet!\" />\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nrender(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.querySelector('#root')\n)\n","import React from 'react'\nimport { Route, Redirect, HashRouter} from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport UserPage from './pages/UserPage'\nimport SnakeHome from './pages/SnakeHome'\n\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Redirect exact from=\"/\" to=\"snake\" />\n      <Route exact path=\"/snake\" component={SnakeHome} />\n      <Route exact path=\"/home\" component={HomePage} />\n      <Route exact path=\"/user/:id\" component={UserPage} />\n    </HashRouter>\n  )\n}\n"],"sourceRoot":""}